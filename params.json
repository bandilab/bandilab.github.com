{"note":"Don't delete this file! It's used internally to help with page regeneration.","tagline":"","name":"bandicoot","google":"","body":"Bandicoot is a programming system with a new set-based programming language, persistency capabilities, and run-time environment. The language is similar to general purpose programming languages where you write functions/methods and access data through variables. Though, in Bandicoot, you always manipulate data in sets using a small set-based algebra (the [relational algebra](http://bandilab.org/bandicoot-algebra.pdf). Here is a small program which manages your book shelf:\r\n\r\n```\r\ntype Books {\r\n    title string,\r\n    pages int,\r\n    price real,\r\n}\r\n\r\nvar shelf Books;\r\n\r\nfn List() Books\r\n{\r\n    return shelf;\r\n}\r\n\r\nfn Append(b Books) void\r\n{\r\n    shelf += b;\r\n}\r\n```\r\n\r\nHere are some of the features:\r\n* native support for set-based programming using the relational algebra\r\n* simple syntax for common set-operators: &quot;+&quot; (union), &quot;-&quot; (minus), etc.\r\n* all functions are automatically exposed via HTTP, e.g. /List, /Append\r\n* supports persistency via global variables (with transactions and ACID)\r\n* can run on multiple computers in a distributed mode\r\n* small binary ~100KB\r\n\r\nFollow:\r\n* GitHub: @bandilab\r\n* Twitter: [@bandilab](http://twitter.com/bandilab)\r\n* [Google Group](http://groups.google.com/group/bandicoot)\r\n"}